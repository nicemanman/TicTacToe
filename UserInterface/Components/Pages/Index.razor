@page "/"
@using UserInterface.Services
@inject GameService GameService
@inject NavigationManager NavigationManager
@inject ILogger<GameService> Logger

<button @onclick="StartNewGame">Начать новую игру</button>
<button @onclick="ContinueGame">Продолжить предыдущую игру</button>

@if (_startNewGame)
{
    <div>
        <span>С кем вы хотите сыграть?</span>
        <button @onclick="async () => await CreateGame(true)">С ботом</button>
        <button @onclick="async () => await CreateGame(false)">С другом</button>
    </div>
}

@code {
    private bool _startNewGame;

    private void StartNewGame()
    {
        _startNewGame = true;
    }

    private void ContinueGame()
    {
        _startNewGame = false;
        // Здесь мы перенаправляем пользователя на компонент игры, который автоматически попытается загрузить текущую игру
        NavigationManager.NavigateTo("/tictactoe", forceLoad: true);
    }

    private async Task CreateGame(bool againstBot)
    {
        _startNewGame = false;
        await GameService.CreateGame(againstBot);
        // После создания новой игры перенаправляем пользователя на компонент игры
        NavigationManager.NavigateTo("/tictactoe", forceLoad: true);
    }
}