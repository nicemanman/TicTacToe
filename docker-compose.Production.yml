services:
  ui:
    image: tic-tac-toe-ui
    ports:
      - '80:8080'
    networks:
      - tictactoe-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    build:
      context: .
      dockerfile: UserInterface/Dockerfile
      
  server:
    image: tic-tac-toe-server
    hostname: server
    networks:
      - tictactoe-network
    depends_on:
      message-queue:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    build:
      context: .
      dockerfile: Server/Dockerfile

  db:
    image: postgres
    hostname: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - tictactoe-network
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 3s
      retries: 30
      
  message-queue:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASSWORD=guest
    networks:
      - tictactoe-network
    volumes:
      - rabbit-data:/var/lib/rabbitmq/
      - rabbit-log:/var/log/rabbitmq/
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 3s
      retries: 30
      
volumes:
  db:
  rabbit-data:
  rabbit-log:
    
networks:
  tictactoe-network:
